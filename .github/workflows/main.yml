name: Go tests

on: [push]

permissions:
  contents: write

jobs:
  build-and-push-image:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_NAME }}
          tags: latest
          labels: latest

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  run-unit-tests:
#    needs: build-and-push-image
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.0'

      - name: Install dependencies
        run:
          cd backend && go mod tidy

      - name: Run unit-service tests
        continue-on-error: true
        run: |
          cd backend/src/tests/service_test && go test . -v -json > testService.log

      - name: Run unit-repository tests
        continue-on-error: true
        run: |
          cd backend/src/tests/repository_test && go test . -v -json > testRepository.log

      - name: Run integration tests
        continue-on-error: true
        run: |
          cd backend/src/tests/integration_test && go test . -v -json > testIntegration.log

      - name: Run e2e tests
        continue-on-error: true
        run: |
          cd backend/src/tests/e2e_tests && go test . -v -json > testE2e.log

      - name: Upload unit-service test logs
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: testService
          path: backend/src/tests/service_test/testService.log
          retention-days: 7

      - name: Upload unit-repository test logs
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: testRepository
          path: backend/src/tests/repository_test/testRepository.log
          retention-days: 7

      - name: Upload integration test logs
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: testIntegration
          path: backend/src/tests/integration_test/testIntegration.log
          retention-days: 7

      - name: Upload e2e test logs
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: testE2e
          path: backend/src/tests/e2e_tests/testE2e.log
          retention-days: 7

  make-report:
    needs: run-unit-tests
    name: Make report
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.0'

      - name: Install dependencies
        run:
          cd backend && go mod tidy

      - name: Download unit-service test log
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: testService

      - name: Download unit-repository test log
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: testRepository

      - name: Download integration test log
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: testIntegration

      - name: Download e2e test log
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: testE2e

      - name: Make report
        run: |
          ls
          cd backend
          go get -u github.com/vakenbolt/go-test-report/
          go install github.com/vakenbolt/go-test-report/
          touch test.log
          cat ../testService.log >> test.log || true
          cat ../testRepository.log >> test.log || true
          cat ../testIntegration.log >> test.log || true
          cat ../testE2e.log >> test.log || true
          cat test.log | go-test-report -o report.html

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: report
          path: backend/report.html
          retention-days: 7
