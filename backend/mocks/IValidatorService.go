// Code generated by mockery v2.46.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// IValidatorService is an autogenerated mock type for the IValidatorService type
type IValidatorService struct {
	mock.Mock
}

// Verify provides a mock function with given fields: ctx, word
func (_m *IValidatorService) Verify(ctx context.Context, word string) error {
	ret := _m.Called(ctx, word)

	if len(ret) == 0 {
		panic("no return value specified for Verify")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, word)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIValidatorService creates a new instance of IValidatorService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIValidatorService(t interface {
	mock.TestingT
	Cleanup(func())
}) *IValidatorService {
	mock := &IValidatorService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
